<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA General Task//EN" "task.dtd">
<task id="task_gd3_xlb_f3">
    <title>Related techniques and technologies to DITA</title>
    <shortdesc>In order to understand DITA, it's worth looking at precursors to DITA and what they
        were for. There are related subject such as minimalism, the Hughes Aircraft STOP report, and
        Edmund Weiss' computer documentation books.</shortdesc>
    <prolog>
        <author>John Gordon Tait</author>
        <copyright>
            <copyryear year="2012-2013"/>
            <copyrholder>John Gordon Tait</copyrholder>
        </copyright>
    </prolog>
    <taskbody>
        <section>
            <title>Comparing the methodologies</title>
            <p>DITA doesn't exist in a vacuum - there are other related techniques and technologies
                that are worth being aware of. DITA is created in the computer help tradition, and
                its users mostly work in this field. Not all of the advice you can find about using
                DITA is directly applicable to the production of standards.</p>
            <p>DITA has a big advantage in that it has a truly heavyweight heritage: Created by IBM,
                maintained by OASIS, and based-on (corporate-friendly) XML which will at least give
                it a chance to be accepted by an organisation.</p>
            <table frame="all" id="table_fj3_5dx_f3">
                <title>Comparing the methodologies</title>
                <tgroup cols="3">
                    <colspec colname="c1" colnum="1" colwidth="1.02*"/>
                    <colspec colname="c2" colnum="2" colwidth="1.03*"/>
                    <colspec colname="c3" colnum="3" colwidth="1*"/>
                    <thead>
                        <row>
                            <entry>Publication or tool</entry>
                            <entry>What's useful</entry>
                            <entry>What's less useful and not useful</entry>
                        </row>
                    </thead>
                    <tbody>

                        <row>
                            <entry><cite>STOP (Sequential Thematic Organization of
                                    Publications)</cite>, the Hughes Aircraft Approach (article)
                                ("The STOP Report")</entry>
                            <entry>Excellent introduction to topic-based writing. Aimed at solving
                                problems with collaboratively-written documents. Witty, rather
                                droll, writing that is quite different from examples of DITA
                                writing</entry>
                            <entry>Scissors and wall technique. Focus on page layout as well as
                                content.</entry>
                        </row>
                        <row>
                            <entry>John Carroll, <cite>The Nurnberg Funnel: Designing Minimalist
                                    Instruction for Practical Computer Skill</cite> (book)</entry>
                            <entry>Encourages writing that is focussed on the reader's needs.
                                Forerunner of modern technical writing practice</entry>
                            <entry>Computer documentation tradition - not directly relevant to
                                policy and procedures. Minimalism is not directly applicable to
                                standards. Minimalism encourages experimentation - standards mandate
                                requirements.</entry>
                        </row>
                        <row>
                            <entry>Information mapping technique by Robert E. Horn</entry>
                            <entry>Spiritual ancestor of DITA</entry>
                            <entry>Proprietary - hard to get hold of. Links to DITA's
                                concept/task/reference information typing idea, which is not
                                relevant to standards</entry>
                        </row>
                        <row>
                            <entry>Edmund Weiss, <cite>How to Write Usable User Documentation</cite>
                                (book)</entry>
                            <entry>Relates John Carroll's minimalism to topic-based writing
                                directly. Excellent example of STOP approach in practice. Bridges
                                the gap between STOP and DITA</entry>
                            <entry>Computer documentation tradition - not directly relevant to
                                policy and procedures</entry>
                        </row>
                        <row>
                            <entry morerows="1">Standards house style</entry>
                            <entry>World-wide standard practice for drafting standards. Mature
                                consultation process. Have formal review meetings than achieves
                                buy-in and consensus</entry>
                            <entry>BSI and ISO sell big documents for a living. Process generates
                                large documents</entry>
                        </row>
                        <row>
                            <entry>Globally understood house style</entry>
                            <entry>Wedded to standard expository mode (top-down approach), with a
                                broadly scoped document split into nested subsections</entry>
                        </row>
                        <row>
                            <entry>DocBook</entry>
                            <entry>Mature, popular, well supported and well documented XML standard
                                for technical authoring. Free</entry>
                            <entry>Lots to learn. Doesn't have modularity as a design goal</entry>
                        </row>
                        <row>
                            <entry>Help authoring tools (HATs) such as Madcap Flare, RoboHelp and
                                Help &amp; Manual </entry>
                            <entry>Tools that generate software tri-pane help. Often similar in
                                approach to DITA but friendlier with better rendering of output </entry>
                            <entry>Computer documentation tradition - not directly relevant to
                                policy and procedures. Unfamiliar tools to most standards authors.
                                Not standardised</entry>
                        </row>
                        <row>
                            <entry>LyX, document processor</entry>
                            <entry>Excellent front-end to LaTeX. Used for typesetting complex
                                technical documents. Has conditional text and modularity.
                                Free</entry>
                            <entry>Looks like a word processor but doesn't behave as one. Not likely
                                to get corporate buy-in. Documents are beautiful but have a
                                particular look</entry>
                        </row>
                        <row>
                            <entry>LibreOffice</entry>
                            <entry>Open source alternative to Word. Has conditional text and
                                modularity. Free</entry>
                            <entry>Not likely to get corporate buy-in. Word processing habits likely
                                to be retained</entry>
                        </row>
                        <row>
                            <entry>GNU Texinfo</entry>
                            <entry>GNU project documentation. Uses friendly @ signs instead of ugly
                                XML angle brackets. Single source. Topic-based writing. Conditional
                                text. Superb documentation. Can generate very high quality LaTeX.
                                Free</entry>
                            <entry>Niche. Steep learning curve. Not likely to get corporate
                                buy-in</entry>
                        </row>
                        <row>
                            <entry>Emacs org-mode</entry>
                            <entry>Wonderful tool that can be used for single source and topic-based
                                authoring and publishing as well as countless other things. Can
                                generate LaTeX. Free</entry>
                            <entry>Niche. Highly unlikely to get corporate buy-in</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section>
            <title>Using Word and PDF documents in a modular way</title>
            <p>The STOP report was a modular technique that didn't use technology at all. The
                collaboration technique was a wall, and it worked very well. Therefore, it's
                possible to undertake a modular approach using your existing tools.</p>
            <p>In fact, if you create a series of short self-contained documents, each with a
                helpful headline style title and a useful thesis sentence (or "short description"),
                you can create a very good basis for managing procedure and policy documentation. It
                is easy to, say, convert Word documents written this way to PDF using Adobe Acrobat,
                and compile the PDF documents into custom manuals as required. You can manage the
                source Word documents and PDF outputs using your existing systems.</p>
            <p>You can, this way, get much of the value of using DITA with none of the learning
                curves associated with learning XML mark up and new kinds of software.</p>
            <p>One main hurdle why this isn't likely to be as successful as it might appear is
                cultural rather than technological. People simply aren't used to using Word this
                way.</p>
            <p>There's almost an expectation that Word documents need to be big, divided down into
                sections and subsections, and cross-referenced: this is almost the mark of a
                serious, respectable Word document. Couple this with the traditional BSI/ISO
                standards model, and you might find that it's too hard to manage authors this way.
                Word has simply been around too long.</p>
        </section>
        
        
    </taskbody>
</task>
