<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA General Task//EN" "task.dtd">
<task id="task_gd3_xlb_f3">
    <title>Related techniques and technologies to DITA</title>
    <shortdesc>In order to understand DITA, it's worth lookng at precursors to DITA and what they
        were for. There are related subject such as minimalism, the Hughes Aircraft STOP report, and
        Edmund Weiss' computer documentation books.</shortdesc>
    <prolog>
        <author>John Gordon Tait</author>
        <copyright>
            <copyryear year="2012"/>
            <copyrholder>John Gordon Tait</copyrholder>
        </copyright>
    </prolog>
    <taskbody>
        <section>
            <title>Comparing the methodologie</title>
            <p>DITA doesn't exist in a vacuum - there are other related techniques and technologies
                that are worth being aware of.</p>
            <p>DITA has a big advantage in that it has a truly heavyweight heritage: Created by IBM,
                maintained by OASIS, and based-on (corporate-friendly) XML which will at least give
                it a chance to be accepted by an organisation.</p>
            <table frame="all" id="table_fj3_5dx_f3">
                <title>Compring the methodologies</title>
                <tgroup cols="3">
                    <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                    <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                    <colspec colname="c3" colnum="3" colwidth="1.0*"/>
                    <thead>
                        <row>
                            <entry>Publication</entry>
                            <entry>What's useful</entry>
                            <entry>What's less useful and not useful</entry>
                        </row>
                    </thead>
                    <tbody>

                        <row>
                            <entry><cite>STOP (Sequential Thematic Organization of
                                    Publications)</cite>, the Huhes Aircraft Approach</entry>
                            <entry>Excellent introduction to topic-based writing. Aimed at solving
                                problems with collaboratively-written document.</entry>
                            <entry>Scissors and wall technique. Focus on page layout as well as
                                content.</entry>
                        </row>
                        <row>
                            <entry>Edmund Weiss, <cite>How to Write Usuble User Documentation</cite>
                            </entry>
                            <entry>Relates John Carrolls' minimalism to topic-based writing
                                directly. Excellemt example of STOP approach in practise. Bridges
                                the gap between STOP and DITA.</entry>
                            <entry>Computer documentation tradition - not directly relevant to
                                policy and procedures.</entry>
                        </row>
                        <row>
                            <entry morerows="1">Standards house style</entry>
                            <entry>Mature consultation process. Have formal review meetings than
                                achieves buy-in and consensus.</entry>
                            <entry>BSI and ISO sell big documents for a living. Process generates
                                large documents</entry>
                        </row>
                        <row>
                            <entry>Well understood house style</entry>
                            <entry>Wedded to standard expository mode (top-down approach), with a
                                broadly scoped document split into nested subsections.</entry>
                        </row>
                        <row>
                            <entry>DocBook</entry>
                            <entry>Mature, popular, well supported and well documented XML standard
                                for technical authoring</entry>
                            <entry>Lots to learn. Doesn't have modularity as a design goal.</entry>
                        </row>
                        <row>
                            <entry>Help authoring tools (HATs)</entry>
                            <entry>Tools that generate sotware help. Often similar in approach to
                                DITA.</entry>
                            <entry>Computer documentation tradition - not directly relevant to
                                policy and procedures.</entry>
                        </row>
                        <row>
                            <entry>LyX, document processor</entry>
                            <entry>Excellent front-end to LaTeX. Used for typesetting complex
                                technical documents. Has conditional text and modularity.</entry>
                            <entry>Looks like a word processor but doesn't behave as one. Not likely
                                to get corporate buy-in.</entry>
                        </row>
                        <row>
                            <entry>LibreOffice</entry>
                            <entry>Open source alternative to Word. Has conditional text and
                                relibble modularity.</entry>
                            <entry>Not likely to get corporate buy-in. Word processing habits likely
                                to be retained.</entry>
                        </row>
                        <row>
                            <entry>GNU Texinfo</entry>
                            <entry>GNU project documentation. Uses friendly @ signs insted of ugly
                                XML angle brackets. Single source. Topic-based writing. .Conditional
                                text. Excellent documentation. Can generate very high quality
                                LaTeX.</entry>
                            <entry>Niche. Not likely to get corporate buy-in.</entry>
                        </row>
                        <row>
                            <entry>Emacs org-mode</entry>
                            <entry>Wonderful tool that can be used for single source and topic-based
                                authoring. Can generate LaTeX.</entry>
                            <entry>Niche. Highly unlikely to get corporate buy-in.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section>
            <title>Using Word and PDF documents in a modular way</title>
            <p>The STOP report was a modular technique that didn't use technology at all. The
                collaboration technique was a wall, and it worked very well. Therefore, it's
                possible to undertake a modular approach using your exisitng tools.</p>
            <p>In fact, if you create a series of short self-contained documents, each with a
                helpful headline style title and a useful thesis sentence, you can create a very
                good basis for managing procedure and policy documentation. It is easy to, say,
                convert <i>Word </i> documents written this way to PDF using Adobe Acrobat, and
                compile the PDF documents into custom manuals as required. You can mange the source
                    <i>Word</i> documents and PDF outputs using your existing systems.</p>
            <p>You can, this way, get much of the value of using DITA with none of the learning
                curves associated with learning XML mark up and new kinds of software.</p>
            <p>One main hurdle why this isn't likely to be as successful as it might appear is
                cultural rather than technological. People simply aren't used to using <i>Word</i>
                this way.</p>
            <p>There's almost an expectation that <i>Word</i> documents need to be big, divided down
                into sections and subsections, and cross-referenced: this is almost the mark of a
                serious, respectable <i>Word</i> document. Couple this with the traditional BSI/ISO
                standards model, and you might find that it's too hard to manage authors this way.
                    <i>Word</i> has simply been around too long.</p>
        </section>
        
        
    </taskbody>
</task>
