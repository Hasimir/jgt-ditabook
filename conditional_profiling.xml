<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA General Task//EN" "task.dtd">
<task id="task_f41_vzd_f3">
    <title>Producing different versions with conditional profiling</title>
    <shortdesc>DITA allows conditional profiling, which means you can assemble one manual from
        topics and then process it so that it changes for different audiences. This means you have
        less unique content to manage.</shortdesc>
    <prolog>
        <author>John Gordon Tait</author>
        <copyright>
            <copyryear year="2012-2013"/>
            <copyrholder>John Gordon Tait</copyrholder>
        </copyright>
    </prolog>
    <taskbody>
        <section>
            <title>Tagging your content with conditional profiling attributes</title>
            <p>Imagine you have to maintain a long, complex manual. Your organisation is going to
                split into 10 divisions. This means that you now have 10 manuals to maintain,
                because the divisions have slightly different needs. You would have more than 10
                times as much work, because the manuals have a lot of common material as well as a
                lot of differences.</p><p>This means a lot of checking. Assuming you can only compare two documents at once, how many
                checks? Well, Metcalfe's Law says that you'll have 45 checks to do for every change,
                each time.</p>
            <p>Using traditional tools, the usual way to manage this is to record all the
                quadratically-expanding variations in a spreadsheet. This can easily become too big
                to manage successfully. In a practical environment, this kind of checking will not
                really happen. The manuals would be handled independently. This will result in a
                lack of co-ordination and consistency.</p>
            <p>DITA offers a different approach. DITA allows you to identify elements (tags) with
                "profiling attributes". You can then make these elements appear or not in your
                output. You can create one manual, then create 10 different varieties from it.</p>
            <p>There are three general ways to approach this, all of them useful:</p>
            <ul id="ol_tsz_xmf_l3">
                <li>You can display only certain pieces of text in a custom document aimed at a
                    particular audience (or other profiling attribute). You do this by hiding all
                    the text aimed at different audiences then pulling forward the text aimed at the
                    audience you want. This allows you to produce multiple documents from a single
                    map.</li>
                <li>You can just hide text aimed at audiences you want to miss out.</li>
                <li>You can flag up (display an image or use a particular piece of text beside) text
                    aimed at a particular audience so that it is easier to pick out. This is useful
                    if you want to produce a general document that different audiences can use
                    easily.</li>
            </ul><p>Rendering is done using very simple filter files called DITAVAL files. You can
                easily generate all kinds of different material from a single version of the manual
                source code, plus tiny little DITAVAL files.</p><p>You don't have to know in advance what you need, because you can create new DITAVAL files when
                you want.</p></section>
        <section>
            <title>Adding new profiling attributes</title>
            <p>It's possible to use DITA's built-in conditional profiling attributes "out of the
                box" using its computer documentation defaults. These have been designed for
                computer help documentation: any more kinds of profiling will require
                "specialisation" of the DITA Open Toolkit.</p>
            <p>This kind of specialisation is (reasonably) easy to do. For example, you could add a
                profiling attribute for different geographic areas ("route"), or for different kinds
                of requirement ("status"), or for roles and responsibilities ("roles"). You can
                create as many specialised profiling attributes as you need.</p>
            <p>You can then assign these to any elements inside a topic, or add them to a topic map
                references inside a map. Once to have done this, you can render different versions
                of the same map, or flag these attributes up using images or colours.</p>
        </section>
        <section>
            <title>Populating lists of values with subject scheme maps</title>
            <p>A specialisation of DITA's topic maps are <i>subject scheme maps</i>. Subject scheme
                maps can contain lists or taxonomies (nested lists) of controlled values that you
                can define. These controlled values can be linked to a profiling attribute.</p>
            <p>If you refer to a subject scheme map in your topic map, your XML editor can suggest
                these controlled values from a pick list when you assign a profiling attribute.
                These keep things orderly and under your control. For example, if you have a
                profiling attribute called "division", you can be offered a list of the 10 possible
                divisions to choose from.</p>
            <p>Because the controlled values can be in a taxonomy, you can filter topics in
                sophisticated ways. For example, say you have a profiling attribute called
                "colours". You can put a controlled value of "all_colours", then define three
                colours "red", "green" and "blue" under it.</p>
            <p>If you tag any elements with the individual values "red", "green" "blue", you can
                filter or flag up the text with any of these colours in the DITAVAL file. You can
                also filter on "all_colours" even though you haven't tagged any text as being
                "all_colours". The subject scheme has established this relationship between the
                subjects.</p>
            <p>You can control content by modifying the subject scheme maps only. The topics can be
                tagged with a solid, controlled set of values that are unlikely to change, while
                subject scheme maps can be created, modified, combined, and disposed of as needed to
                present the content to meet changing requirements.</p>
            <p>Rather than alter source files, subject scheme maps can be assembled on the fly to
                create different deliverables, and these can be combined with topic maps to achieve
                complete command over your technical material.</p>
        </section>
    </taskbody>
</task>
