<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA General Task//EN" "task.dtd">
<task id="task_ayn_d15_w3">
    <title>Solving authoring problems using structured documents</title>
    <shortdesc>Standards are usually written using common Office tools such as <tm tmtype="tm">Microsoft Word</tm>.</shortdesc>
    
    <taskbody>
        <section><title>Common problems using <tm tmtype="tm">Word</tm></title>
           <p><tm tmtype="tm">Word</tm> is easy to use, but managing a suite of inter-related
                standards using <tm tmtype="tm">Word</tm> doesn't scale well, because these
                documents are unstructured.</p>
            
            <p><tm tmtype="tm"
                    >Word</tm> works well with medium-sized standalone documents. It doesn't work so
                well when it is used to maintain a suite of inter-related standards. This is because
                    <tm tmtype="tm">Word</tm>documents are unstructured.</p>
            <p>There are at several
                common problems:<ul id="ul_lfn_hb5_w3">
                    <li>It's hard to combine <tm tmtype="tm">Word</tm>documents. They are not meant
                        to be easily combined. Because authors can easily overeride default styles,
                        combining them is haphazard and can provide unpredictable results.</li>
                    <li>There's no means of filtering content for different uses. (This is called
                        "conditional profiling".) This means that content will need to be re-written
                        for different audiences.</li>
                    <li>There's no means of pulling small amount of information from one document
                        into another. This means that common wording will need to be cut-and-pasted
                        from one document into another. There is no way to keep track of this.</li>
                </ul></p>
            <p>These aren't really faults with <tm tmtype="tm">Word</tm>. It's just not what it is
                designed to do. On the other hand though, it's what document authors and managers
                really need.</p></section>
        <section>
            <title>Using a structured authoring technique: DITA</title>
            <p>DITA (DITA Information Typing Architecture) is an open standard based on XML
                technology. It provides a solution for these technical authoring problems, and could
                form a much better basis for maintaining a suite of inter-related technical
                material.</p>
            <p>DITA files are <i>highly</i> structured. Authoring in DITA is quite different from
                authoring in <tm tmtype="tm">Word</tm> and comes with a steep learning curve. It
                provides a very sound basis for technical standards because it has:<ul
                    id="ul_ell_4d5_w3">
                    <li>an assembly mechanism called ditamaps, which allow you to combine material
                        in many ways and allo the same material to appear in more than one
                        document</li>
                    <li>a <i>conditional profiling</i> mechanism, which allows you to adapt content
                        for different uses</li>
                    <li>a <i>transclusion</i> mechanism, which allows you to insert or push small
                        amount of text into your document from elsewhere, solving the cut-and-paste
                        problem.</li>
                </ul></p>
            <p>I use the word "document", but DITA can most easy produce XHTML pages for hosting on
                the web. PDF documents and EPUB ebook can also be produced easily. Rather than
                producing documents, consider XHTML output as the default, with a web browser as a
                universal document reader.</p>
        </section>
        <section>
            <title>Using oXygen Author to produce DITA content</title>
            <p>DITA is a standard, not a product, and there are many ways to produce and manage DITA
                content. Some of thee would require considerable investment an configuration.</p>
            <p>This book has "the easy way" in the title. Rather than explore all the options
                available, I'll limit it to a single product: &lt;oXygen> XML Author (which I'll
                call "oXygen"). oXygen comes bundled and preconfigured which the DITA-OT, which is
                an open source package that serves as a reference implementation (sp?) for DITA. It
                also comes which the DITA for Publishers EPUB plugin, which allows easy production
                of ebooks.</p>
            <p> it's worth considering oXygen as a nuclear-powered word-processor that can be used
                as a stand-alone application to get things done. It can produce web-sites and
                documents.</p>
        </section>
        <section>
            <title>Essential reading</title>
            <p>This book won't discuss how to produce DITA content in much technical detail. This
                material is covered elsewhere in some excellent DITA reference material:</p>
            <p>
                <ul id="ul_orv_djb_x3">
                    <li>
                        <cite>DITA Best Practices</cite>, produced by DITA-originators IBM,
                            contains an excellent introduction and example specifically aimed at
                            authors. It assumes you are writing product help, but otherwise is very
                            helpful. Much of it's material is avialble elswehere, but it's an
                            excellent, portable summary and is an essential purchase.
                    </li>
                    <li>
                        <cite>DITA for Practicioners Volume 1</cite> (sp.) is an advanced DITA
                            book by Eliot Kimber, and serves as natural further reading after
                                <cite>DITA Best Practices</cite>. I used Eliot Kimber's <cite>"DITA
                                Configuration and Specialization Tutorials</cite>, available from
                                <xref href="http://www.xiruss.org/tutorials/dita-specialization/"
                                >http://www.xiruss.org/tutorials/dita-specialization/</xref>, to
                            specialise a profiling attribute. (It's covered in the book, but I found
                            the tutorial clearer.)
                    </li>
                    <li>
                        The <cite>DITA 1.2 specification </cite>, hosted at <xref
                                href="http://www.xiruss.org/tutorials/dita-specialization/"
                                >www.link.com</xref>, provides the official specification. It looks
                            pretty fearsome if you aren't an XML expert, but it gives the final
                            answer to difficult questions. Best of all, it provides many very
                            helpful examples.
                    </li>
                    <li>
                        <cite>The &lt;oXygen> Users Manual</cite>, available from within oXygen
                            and on the web, provides DITA-specific examples.
                    </li>
                </ul>
            </p>
            <p/>
            <p>This book will cover some of the aras not specifically addresssed in the above
                list.</p>
        </section>
    </taskbody>
</task>
